<?xml version="1.1" encoding="UTF-8"?>

<!-- A simple demo emulation that recognizes a small
subset of ANSI x3.64 and VT-series escape codes. -->

<LexerSpec>
	<Package>com.chalcodes.jtx.demo.lexer</Package>
	<Prefix>Demo</Prefix>
	<StateListener>false</StateListener>
	<Loggers>false</Loggers>
	<ResourcePath>krum/jtx/demo/lexer</ResourcePath>
	
	<State name="DEFAULT"/>
	<InitialState>DEFAULT</InitialState>

	<RuleGroup>
		<State name="DEFAULT"/>
		
		<!-- ANSI/VT stuff -->
		<!-- cursor position: no params = home, 1 param = row, 2 params = row, col -->
		<Rule expr="&#27;\[([0-9]+(;[0-9]+)*)?[Hf]" event="cursorPosition"/>
		<Rule expr="&#27;\[[0-9]*A" event="cursorUp"/>
		<Rule expr="&#27;\[[0-9]*B" event="cursorDown"/>
		<Rule expr="&#27;\[[0-9]*C" event="cursorRight"/>
		<Rule expr="&#27;\[[0-9]*D" event="cursorLeft"/>
		<Rule expr="&#27;\[s" event="saveCursor"/>
		<Rule expr="&#27;\[u" event="restoreCursor"/>
		<Rule expr="&#27;\[2J" event="clearScreen"/>
		<Rule expr="&#27;\[K" event="clearLine"/>
		<Rule expr="&#27;\[[0-9]+(;[0-9]+)*m" event="setAttributes"/>
		
		<!-- This sequence enables DEC auto-wrap mode.  The parser always
		operates in auto-wrap mode, so we match this just to ignore it. -->
		<Rule expr="&#27;\[\??7h"/>

		<!-- the parser will be simpler if we give certain characters their own events -->
		<Rule expr="&#10;" event="lineFeed"/>
		<Rule expr="&#13;" event="carriageReturn"/>
		<Rule expr="&#8;" event="backspace"/>
		<Rule expr="&#9;" event="tab"/>
		<Rule expr="&#7;" event="bell"/>
		
		<!-- match unrecognized escape sequences at a lower priority -->
		<Rule expr="&#27;\[[^a-zA-Z]*[a-zA-Z]" event="unknownEscape" pri="5"/>
		
		<!-- match everything else as literal text -->
		<Rule expr="." event="literalText" pri="5"/>
	</RuleGroup>
</LexerSpec>
